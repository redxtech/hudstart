name: Build

on:
  push:
    branches: [master]
    # tags:
    #   - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    strategy:
      matrix:
        deno-version: [v1.x.x]
        node-version: [16.x]

    env:
      DENO_DIR: deno-cache-dir


    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: ./frontend/yarn.lock

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: yarn

      - name: Build frontend
        working-directory: ./frontend
        run: yarn build

      - name: Cache frontend build
        uses: actions/cache@v3
        with:
          key: ${{ hashFiles('frontend/dist/**') }}
          path: frontend/dist

      - name: Use Deno ${{ matrix.deno-version }}
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Cache server dependencies 
        uses: actions/cache@v3
        with:
          key: ${{ hashFiles('**/deno.lock') }}
          path: ${{ env.DENO_DIR }}

      - name: Build assets
        working-directory: ./server
        run: deno task build-assets

      - name: Cache asset compilation
        uses: actions/cache@v3
        with:
          key: ${{ hashFiles('server/assets.js') }}
          path: server/assets.js

      - name: Build server (linux)
        working-directory: ./server
        run: deno task build-linux

      - name: Build server (windows)
        working-directory: ./server
        run: deno task build-win

      - name: Build server (macos)
        working-directory: ./server
        run: deno task build-macos

      - name: Build server (m1)
        working-directory: ./server
        run: deno task build-m1

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "server/hudstart-server*"
          prerelease: true
          commit: master
          tag: nightly
          allowUpdates: true
          removeArtifacts: true
