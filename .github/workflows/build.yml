name: Build

on:
  push:
    branches: [master]
    # tags:
    #   - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Cache frontend build
        uses: actions/cache@v3
        id: frontend
        with:
          key: ${{ hashFiles('frontend/**') }}
          path: frontend/dist

      - name: Use node v16.x
        if: steps.frontend.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
          cache-dependency-path: ./frontend/yarn.lock

      - name: Install frontend dependencies
        if: steps.frontend.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: yarn

      - name: Build frontend
        if: steps.frontend.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: yarn build

      - name: Cache server build
        uses: actions/cache@v3
        id: server
        with:
          key: ${{ hashFiles('server/**') }}
          path: server/hudstart*

      - name: Use deno v1.x.x
        if: steps.server.outputs.cache-hit != 'true'
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x.x

      - name: Cache asset compilation
        uses: actions/cache@v3
        id: assets
        with:
          key: ${{ hashFiles('frontend/dist/**') }}
          path: server/assets.js

      - name: Build assets
        if: steps.assets.outputs.cache-hit != 'true'
        working-directory: ./server
        run: deno task build-assets

      - name: Build server (linux)
        if: steps.server.outputs.cache-hit != 'true'
        working-directory: ./server
        run: deno task build-linux

      - name: Build server (windows)
        if: steps.server.outputs.cache-hit != 'true'
        working-directory: ./server
        run: deno task build-win

      - name: Publish release
        if: steps.server.outputs.cache-hit != 'true'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "server/hudstart-server*"
          body: this release is based off the latest commit to `master`, and as such, is highly unstable. only use this if you know what you are doing.
          prerelease: true
          commit: master
          tag: nightly
          allowUpdates: true
          removeArtifacts: true
